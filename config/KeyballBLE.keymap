#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E         &kp R             &kp T                                          &kp Y              &kp U  &lt 5 I    &kp O    &kp P
&mt LEFT_CONTROL A  &kp S           &kp D         &kp F             &kp G        &mkp LCLK      &kp BACKSLASH      &kp H              &kp J  &kp K      &kp L    &mt RIGHT_CONTROL ENTER
&mt LEFT_SHIFT Z    &kp X           &kp C         &kp V             &kp B        &mkp RCLK      &kp RIGHT_BRACKET  &kp N              &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL           &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE  &lt 2 TAB      &lt 3 BACKSPACE    &kp RIGHT_COMMAND                             &lt 6 ESC
            >;

            sensor-bindings = <&ROTATE SCRL_UP SCRL_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION    &kp AT_SIGN      &kp HASH              &kp DOLLAR            &kp PERCENT                      &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans       &trans      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp MINUS             &kp EQUAL
&trans             &trans           &trans                &trans                &trans       &trans      &trans  &kp COLON         &kp DOUBLE_QUOTES  &kp COMMA      &kp PERIOD            &kp BACKSLASH
&trans             &trans           &trans                &trans                &trans       &trans      &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&ROTATE SCRL_LEFT SCRL_RIGHT>;
        };

        NUM {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                         &kp N6   &kp N7  &kp N8   &kp N9   &kp N0
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &kp F7     &kp F8   &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &trans   &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp MINUS  &kp DOT                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp PAGE_UP   &trans    &kp UP    &trans     &kp PAGE_DOWN
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp HOME      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LA(LEFT)  &trans    &trans    &trans     &kp LA(RIGHT)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans    &trans     &trans     &trans     &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
